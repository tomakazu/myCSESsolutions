#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define block 447
ll n,q;
ll ar[200001];
ll sq[4*200000+1];

void construct(ll low,ll high,ll treenode){
	
	if(low==high){
		sq[treenode] = ar[low];
		return;
	}
	ll mid = (low+high)/2;
	construct(low,mid,2*treenode);
	construct(mid+1,high,2*treenode+1);
	sq[treenode] = min(sq[2*treenode+1],sq[2*treenode]);
}

ll getMin(ll l,ll r,ll treenode,ll low,ll high){
	
	if(low>r||high<l){
		return INT_MAX;
	}
	
	if(low>=l&&high<=r){
		return sq[treenode];
	}
	
	ll mid = (low+high)/2;
	
	ll ans1 = getMin(l,r,2*treenode,low,mid);
	ll ans2 = getMin(l,r,2*treenode+1,mid+1,high);
	return min(ans1,ans2);
}

void update(ll k,ll val,ll low,ll high,ll node){
	
	if(low==high){
		sq[node] = val;	
		ar[low] = val;
		return;
	}
	ll mid = (low+high)/2;
	if(k<=mid){
		update(k,val,low,mid,2*node);
	}else{
		update(k,val,mid+1,high,2*node+1);
	}
	sq[node] = min(sq[2*node],sq[2*node+1]);	
}


int main(){
			
	cin>>n>>q;
	for(int i=1;i<=n;i++){
		cin>>ar[i];
	}
	construct(1,n,1);
	
	while(q--){
		ll t;
		cin>>t;
		if(t==2){
			ll l,r;
			cin>>l>>r;
			cout<<getMin(l,r,1,1,n)<<"\n";
		}else{
			ll k,u;
			cin>>k>>u;
			update(k,u,1,n,1);
		}
	}
	return 0;	
}
