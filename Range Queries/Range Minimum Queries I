#include<bits/stdc++.h>
using namespace std;
#define ll long long int
int n,q;
ll ar[200001];
ll tree[4*200001];
void buildSegmentTree(ll low,ll high,ll node){
	
	if(low==high){
		tree[node] = ar[low];
		return;
	}
	
	ll mid = (low+high)/2;
	buildSegmentTree(low,mid,2*node);
	buildSegmentTree(mid+1,high,2*node+1);
	tree[node] = min(tree[2*node],tree[2*node+1]);
	return;
}
 
ll query(ll a,ll b,ll treenode,ll low,ll high){
	
	if(low>b||high<a){
		return INT_MAX;
	}
	
	//Complete overlap
	if(low>=a&&high<=b){
		return tree[treenode];
	}
	
	//Partial oveelap
	ll mid  = (low+high)/2;
	ll ans1 = query(a,b,2*treenode,low,mid);
	ll ans2 = query(a,b,2*treenode+1,mid+1,high);
	return min(ans1,ans2);
	
}
 
int main(){
	
	cin>>n>>q;
	for(int i=1;i<=n;i++){
		cin>>ar[i];
	}
	buildSegmentTree(1,n,1);
	
	while(q--){
		ll a,b;
		cin>>a>>b;
		cout<<query(a,b,1,1,n)<<"\n";
	}
	return 0;	
}
